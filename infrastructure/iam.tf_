resource "aws_iam_user" "backend_user" {
  name = "${local.name_prefix}--backend-user-iam"
}

resource "aws_iam_role" "backend_role" {
  name = "${local.name_prefix}--backend-role"
  assume_role_policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Principal" : {
          "Service" : "ecs-tasks.amazonaws.com"
        },
        "Action" : "sts:AssumeRole"
      }
    ]
  })
}

resource "aws_iam_policy" "backend_policy" {
  name = "${local.name_prefix}--backend-policy"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Action" : [
          "autoscaling:Describe*",
          "cloudwatch:*",
          "logs:*",
          "sns:*",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:GetRole"
        ],
        "Effect" : "Allow",
        "Resource" : "*"
      },
      {
        "Effect" : "Allow",
        "Action" : "iam:CreateServiceLinkedRole",
        "Resource" : "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
        "Condition" : {
          "StringLike" : {
            "iam:AWSServiceName" : "events.amazonaws.com"
          }
        }
      },
      {
        "Effect" : "Allow",
        "Action" : [
          "secretsmanager:*"
        ],
        "Resource" : aws_secretsmanager_secret.secrets_manager.arn
      }
    ]
  })
}

resource "aws_iam_user_policy_attachment" "backend_user_policy_attachment" {
  user       = aws_iam_user.backend_user.name
  policy_arn = aws_iam_policy.backend_policy.arn
}

resource "aws_iam_role_policy_attachment" "backend_role_policy_attachment" {
  role       = aws_iam_role.backend_role.name
  policy_arn = aws_iam_policy.backend_policy.arn
}

resource "aws_iam_access_key" "backend_user_creds" {
  user = aws_iam_user.backend_user.name
}